{"remainingRequest":"D:\\2023\\BearPi\\paper\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\2023\\BearPi\\paper\\vue\\src\\utils\\request.js","dependencies":[{"path":"D:\\2023\\BearPi\\paper\\vue\\src\\utils\\request.js","mtime":1673340330000},{"path":"D:\\2023\\BearPi\\paper\\vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\2023\\BearPi\\paper\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHJvdXRlciBmcm9tICJAL3JvdXRlciI7CmltcG9ydCBjb25maWcgZnJvbSAiLi4vY29uZmlnIjsKdmFyIGJhc2VVcmwgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/IGNvbmZpZy5iYXNlVXJsLmRldiA6IGNvbmZpZy5iYXNlVXJsLnBybzsKdmFyIHJlcXVlc3QgPSBheGlvcy5jcmVhdGUoewogIC8vYmFzZVVSTDogIi9hcGkiLAogIHRpbWVvdXQ6IDMwMDAwCn0pOyAvLyDor7fmsYLnmb3lkI3ljZXvvIzlpoLmnpzor7fmsYLlnKjnmb3lkI3ljZXph4zpnaLvvIzlsIbkuI3kvJrooqvmi6bmiKrmoKHpqozmnYPpmZAKCnZhciB3aGl0ZVVybHMgPSBbIi9hcGkvbG9naW4iLCAnL2FwaS9yZWdpc3RlcicsICcvYXBpL3JlZ2lzdGVyL3NlbmRlbWFpbCddOyAvLyByZXF1ZXN0IOaLpuaIquWZqAovLyDlj6/ku6Xoh6ror7fmsYLlj5HpgIHliY3lr7nor7fmsYLlgZrkuIDkupvlpITnkIYKLy8g5q+U5aaC57uf5LiA5YqgdG9rZW7vvIzlr7nor7fmsYLlj4LmlbDnu5/kuIDliqDlr4YKCnJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBjb25zb2xlLmxvZygi5oum5oiq5ZmoMSIpOyAvLyDlj5blh7pzZXNzaW9uU3RvcmFnZemHjOmdoue8k+WtmOeahOeUqOaIt+S/oeaBrwoKICB2YXIgdXNlckpzb24gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIik7CgogIGlmICghd2hpdGVVcmxzLmluY2x1ZGVzKGNvbmZpZy51cmwpKSB7CiAgICBpZiAoIXVzZXJKc29uKSB7CiAgICAgIGNvbnNvbGUubG9nKCJ0aWFvemh1YW5sYSIpOwogICAgICByb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgICB9CiAgfQoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmVycm9yKCLmi6bmiKrlmahiZWZvcmUgcmVxdWVzdCIpOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSDmi6bmiKrlmagKLy8g5Y+v5Lul5Zyo5o6l5Y+j5ZON5bqU5ZCO57uf5LiA5aSE55CG57uT5p6cCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLy9jb25zb2xlLmxvZygi5oum5oiq5Zmo5omT5Y2wIikKICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlKQogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOyAvLyDlpoLmnpzmmK/ov5Tlm57nmoTmlofku7YKICAvL2NvbnNvbGUubG9nKHJlcykKCiAgaWYgKHJlc3BvbnNlLmNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICdibG9iJykgewogICAgY29uc29sZS5lcnJvcigiYmxvYiIpOwogICAgcmV0dXJuIHJlczsKICB9IC8vIOWFvOWuueacjeWKoeerr+i/lOWbnueahOWtl+espuS4suaVsOaNrgoKCiAgaWYgKHR5cGVvZiByZXMgPT09ICdzdHJpbmcnKSB7CiAgICBjb25zb2xlLmVycm9yKCLmi6bmiKrlmahzdHJpbmciKTsKICAgIHJlcyA9IHJlcyA/IEpTT04ucGFyc2UocmVzKSA6IHJlczsKICB9CgogIGNvbnNvbGUubG9nKHJlcy5jb2RlKTsKCiAgaWYgKHJlcy5jb2RlID09PSAzKSB7CiAgICBjb25zb2xlLmxvZygicHJpbnQiICsgcmVzLmNvZGUpOwogICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgidXNlciIpOwogICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgidXNlclBlcm1pc3Npb24iKTsKICAgIGNvbnNvbGUuZXJyb3IoInRva2Vu6L+H5pyf77yM6YeN5paw55m75b2VIik7CiAgICByb3V0ZXIucHVzaCgiL2xvZ2luIik7CiAgfQoKICByZXR1cm4gcmVzOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnZXJyISEnICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["D:/2023/BearPi/paper/vue/src/utils/request.js"],"names":["axios","router","config","baseUrl","process","env","NODE_ENV","dev","pro","request","create","timeout","whiteUrls","interceptors","use","console","log","userJson","sessionStorage","getItem","includes","url","push","error","Promise","reject","response","res","data","responseType","JSON","parse","code","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCJ,MAAM,CAACC,OAAP,CAAeI,GAAxD,GAA8DL,MAAM,CAACC,OAAP,CAAeK,GAA7F;AACA,IAAMC,OAAO,GAAGT,KAAK,CAACU,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;;AACA,IAAMC,SAAS,GAAG,CAAC,YAAD,EAAe,eAAf,EAA+B,yBAA/B,CAAlB,C,CACA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAZ,MAAM,EAAI;AACvCa,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADuC,CAEvC;;AACA,MAAIC,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAf;;AACA,MAAI,CAACP,SAAS,CAACQ,QAAV,CAAmBlB,MAAM,CAACmB,GAA1B,CAAL,EAAqC;AACjC,QAAI,CAACJ,QAAL,EAAe;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAf,MAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACH;AACJ;;AACD,SAAOpB,MAAP;AACH,CAXD,EAWG,UAAAqB,KAAK,EAAI;AACRR,EAAAA,OAAO,CAACQ,KAAR,CAAc,mBAAd;AAEA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAfD,E,CAgBA;AACA;;AACAd,OAAO,CAACI,YAAR,CAAqBa,QAArB,CAA8BZ,GAA9B,CACI,UAAAY,QAAQ,EAAI;AACR;AAEA;AACA,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CAJQ,CAKR;AACA;;AACA,MAAIF,QAAQ,CAACxB,MAAT,CAAgB2B,YAAhB,KAAiC,MAArC,EAA6C;AACzCd,IAAAA,OAAO,CAACQ,KAAR,CAAc,MAAd;AACA,WAAOI,GAAP;AACH,GAVO,CAWR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBZ,IAAAA,OAAO,CAACQ,KAAR,CAAc,WAAd;AAEAI,IAAAA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAH,GAAqBA,GAA9B;AACH;;AACDZ,EAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACK,IAAhB;;AACA,MAAIL,GAAG,CAACK,IAAJ,KAAa,CAAjB,EAAoB;AAChBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAASW,GAAG,CAACK,IAAzB;AACAd,IAAAA,cAAc,CAACe,UAAf,CAA0B,MAA1B;AACAf,IAAAA,cAAc,CAACe,UAAf,CAA0B,gBAA1B;AACAlB,IAAAA,OAAO,CAACQ,KAAR,CAAc,cAAd;AACAtB,IAAAA,MAAM,CAACqB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAOK,GAAP;AACH,CA3BL,EA4BI,UAAAJ,KAAK,EAAI;AACLR,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUO,KAAtB,EADK,CACwB;;AAC7B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CA/BL;AAiCA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\nimport router from \"@/router\";\nimport config from \"../config\"\n\nconst baseUrl = process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro\nconst request = axios.create({\n    //baseURL: \"/api\",\n    timeout: 30000\n})\n\n// 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\nconst whiteUrls = [\"/api/login\", '/api/register','/api/register/sendemail']\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    console.log(\"拦截器1\")\n    // 取出sessionStorage里面缓存的用户信息\n    let userJson = sessionStorage.getItem(\"user\")\n    if (!whiteUrls.includes(config.url)) {\n        if (!userJson) {\n            console.log(\"tiaozhuanla\")\n            router.push(\"/login\")\n        }\n    }\n    return config\n}, error => {\n    console.error(\"拦截器before request\")\n\n    return Promise.reject(error)\n});\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        //console.log(\"拦截器打印\")\n\n        //console.log(response)\n        let res = response.data;\n        // 如果是返回的文件\n        //console.log(res)\n        if (response.config.responseType === 'blob') {\n            console.error(\"blob\")\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            console.error(\"拦截器string\")\n\n            res = res ? JSON.parse(res) : res\n        }\n        console.log(res.code)\n        if (res.code === 3) {\n            console.log(\"print\"+ res.code)\n            sessionStorage.removeItem(\"user\")\n            sessionStorage.removeItem(\"userPermission\")\n            console.error(\"token过期，重新登录\")\n            router.push(\"/login\")\n        }\n        return res;\n    },\n    error => {\n        console.log('err!!' + error) // for debug\n        return Promise.reject(error)\n    }\n)\nexport default request\n\n"]}]}